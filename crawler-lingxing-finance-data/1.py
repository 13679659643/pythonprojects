# _*_ coding: utf-8 _*_
# @Time : 2024-11-29
# @Author : 李仕春
# @Email ： scli@doocn.com
# @File : large-cargo-account-statement
# @Desc :
import time
from loguru import logger
# -*- coding: utf-8 -*-
from digiCore.db_init import InstantiationDB

idb = InstantiationDB()

from datetime import datetime, timedelta


def generate_month_list(start, end):
    start_date = datetime.strptime(start, "%Y%m")
    end_date = datetime.strptime(end, "%Y%m")

    current_date = start_date
    result = []

    while current_date <= end_date:
        result.append(current_date.strftime("%Y%m"))
        # 增加一个月
        if current_date.month == 12:
            current_date = current_date.replace(year=current_date.year + 1, month=1)
        else:
            current_date = current_date.replace(month=current_date.month + 1)

    return result


def run_sql():
    tidb_ob = idb.load_tidb_ob()
    date_list = generate_month_list('202411', '202502')
    for y_m in date_list:
        # 删除数据
        delete_sql = f"""
        delete
    from dwd_prod.dwd_gsm_lx_profit_statement_msku_i_d
    where date_format(dt, '%Y%m')='{y_m}'
        """
        tidb_ob.commit_sql(delete_sql)
        logger.info(f'{y_m} 已删除')
        time.sleep(0.5)
        # 保存时间
        save_sql = f"""
        insert into dwd_prod.dwd_gsm_lx_profit_statement_msku_i_d
select msku_sta.dt                                                             as dt,
       totalFbaAndFbmQuantity,
       totalFbaAndFbmAmount,
       totalSalesQuantity,
       fbaSalesQuantity,
       fbmSalesQuantity,
       totalReshipQuantity,
       reshipFbmProductSalesQuantity,
       reshipFbmProductSaleRefundsQuantity,
       reshipFbaProductSalesQuantity,
       reshipFbaProductSaleRefundsQuantity,
       mcFbaFulfillmentFeesQuantity,
       cgAbsQuantity,
       cgQuantity,
       fbaInventoryCreditQuantity,
       disposalQuantity,
       removalQuantity,
       totalAdsSales,
       adsSdSales,
       adsSpSales,
       sharedAdsSbSales,
       sharedAdsSbvSales,
       totalAdsSalesQuantity,
       adsSdSalesQuantity,
       adsSpSalesQuantity,
       sharedAdsSbSalesQuantity,
       sharedAdsSbvSalesQuantity,
       totalSalesAmount,
       fbaSaleAmount,
       fbmSaleAmount,
       shippingCredits,
       promotionalRebates,
       fbaInventoryCredit,
       cashOnDelivery,
       otherInAmount,
       fbaLiquidationProceeds,
       fbaLiquidationProceedsAdjustments,
       amazonShippingReimbursement,
       safeTReimbursement,
       netcoTransaction,
       reimbursements,
       clawbacks,
       sharedComminglingVatIncome,
       giftWrapCredits,
       guaranteeClaims,
       costOfPoIntegersGranted,
       others,
       totalSalesRefunds,
       fbaSalesRefunds,
       fbmSalesRefunds,
       shippingCreditRefunds,
       giftWrapCreditRefunds,
       chargebacks,
       costOfPoIntegersReturned,
       promotionalRebateRefunds,
       totalFeeRefunds,
       sellingFeeRefunds,
       fbaTransactionFeeRefunds,
       refundAdministrationFees,
       otherTransactionFeeRefunds,
       refundForAdvertiser,
       pointsAdjusted,
       shippingLabelRefunds,
       refundsQuantity,
       refundsRate,
       fbaReturnsQuantity,
       fbaReturnsSaleableQuantity,
       fbaReturnsUnsaleableQuantity,
       fbaReturnsQuantityRate,
       platformFee,
       totalFbaDeliveryFee,
       fbaDeliveryFee,
       mcFbaDeliveryFee,
       otherTransactionFees,
       totalAdsCost,
       adsSpCost,
       adsSbCost,
       adsSbvCost,
       adsSdCost,
       sharedCostOfAdvertising,
       promotionFee,
       sharedSubscriptionFee,
       sharedLdFee,
       sharedCouponFee,
       sharedEarlyReviewerProgramFee,
       sharedVineFee,
       totalStorageFee,
       fbaStorageFee,
       sharedFbaStorageFee,
       longTermStorageFee,
       sharedLongTermStorageFee,
       sharedStorageRenewalBilling,
       sharedFbaDisposalFee,
       sharedFbaRemovalFee,
       sharedFbaInboundTransportationProgramFee,
       sharedLabelingFee,
       sharedPolybaggingFee,
       sharedBubblewrapFee,
       sharedTapingFee,
       sharedFbaCustomerReturnFee,
       sharedFbaInboundDefectFee,
       sharedFbaOverageFee,
       sharedAmazonPartneredCarrierShipmentFee,
       sharedFbaInboundConvenienceFee,
       sharedItemFeeAdjustment,
       sharedOtherFbaInventoryFees,
       fbaStorageFeeAccrual,
       fbaStorageFeeAccrualDifference,
       longTermStorageFeeAccrual,
       longTermStorageFeeAccrualDifference,
       sharedFbaIntegerernationalInboundFee,
       adjustments,
       totalPlatformOtherFee,
       shippingLabelPurchases,
       sharedCarrierShippingLabelAdjustments,
       sharedLiquidationsFees,
       sharedManualProcessingFee,
       sharedOtherServiceFees,
       totalSalesTax,
       taxCollected,
       tcsIgstCollected,
       tcsSgstCollected,
       tcsCgstCollected,
       sharedComminglingVatExpenses,
       sharedTaxAdjustment,
       salesTaxRefund,
       taxRefunded,
       tcsIgstRefunded,
       tcsSgstRefunded,
       tcsCgstRefunded,
       salesTaxWithheld,
       refundTaxWithheld,
       tdsSection194ONet,
       if(cgPriceTotal in ('null', 'None'), 0, cgPriceTotal)                   as cgPriceTotal,
       if(cgPriceAbsTotal in ('null', 'None'), 0, cgPriceAbsTotal)             as cgPriceAbsTotal,
       hasCgPriceDetail,
       if(cgUnitPrice in ('null', 'None'), 0, cgUnitPrice)                     as cgUnitPrice,
       if(proportionOfCg in ('null', 'None'), 0, proportionOfCg)               as proportionOfCg,
       if(cgTransportCostsTotal in ('null', 'None'), 0,
          cgTransportCostsTotal)                                               as cgTransportCostsTotal,
       if(hasCgTransportCostsDetail in ('null', 'None'), 0,
          hasCgTransportCostsDetail)                                           as hasCgTransportCostsDetail,
       if(cgTransportUnitCosts in ('null', 'None'), 0, cgTransportUnitCosts)   as cgTransportUnitCosts,
       if(proportionOfCgTransport in ('null', 'None'), 0,
          proportionOfCgTransport)                                             as proportionOfCgTransport,
       if(totalCost in ('null', 'None'), 0, totalCost)                         as totalCost,
       if(proportionOfTotalCost in ('null', 'None'), 0,
          proportionOfTotalCost)                                               as proportionOfTotalCost,
       if(cgOtherCostsTotal in ('null', 'None'), 0, cgOtherCostsTotal)         as cgOtherCostsTotal,
       if(cgOtherUnitCosts in ('null', 'None'), 0, cgOtherUnitCosts)           as cgOtherUnitCosts,
       if(hasCgOtherCostsDetail in ('null', 'None'), 0,
          hasCgOtherCostsDetail)                                               as hasCgOtherCostsDetail,
       if(proportionOfCgOtherCosts in ('null', 'None'), 0,
          proportionOfCgOtherCosts)                                            as proportionOfCgOtherCosts,
       if(grossProfit in ('null', 'None'), 0, grossProfit)                     as grossProfit,
       if(grossRate in ('null', 'None'), 0, grossRate)                         as grossRate,
       if(grossProfitIncome in ('null', 'None'), 0, grossProfitIncome)         as grossProfitIncome,
       if(otherFeeStr = 'null', 'None', otherFeeStr)                           as otherFeeStr,
       customOrderFee,
       customOrderFeePrincipal,
       customOrderFeeCommission,
       id,
       msku_sta.sid,
       reportDateMonth,
       postedDateLocale,
       if(isDisplayDetail = 'null', 'None', isDisplayDetail)                   as isDisplayDetail,
       if(smallImageUrl = '', 'None', smallImageUrl)                           as pic_url,
       msku_sta.msku                                                           as msku,
       if(asin = '', 'None', asin)                                             as asin,
       if(parentAsin = '', 'None', parentAsin)                                 as parent_asin,
       storeName                                                               as store_name,
       country,
       countryCode                                                             as country_code,
       if(localName = '', 'None', localName)                                   as color_size,
       if(localSku = '', 'None', localSku)                                     as local_sku,
       if(itemName = '', 'None', itemName)                                     as itemName,
       if(model = '', 'None', model)                                           as model,
       if(principalRealname = 'null', 'None', principalRealname)               as principal_name,
       if(productDeveloperRealname = 'null', 'None', productDeveloperRealname) as productDeveloperRealname,
       if(categoryName = '', 'None', categoryName)                             as category,
       if(brandName = '', 'None', brandName)                                   as brand,
       msku_sta.currencyCode                                                   as currency_code,
       currencyIcon                                                            as currency_symbol,
       if(listingTagIds = '', 'None', listingTagIds)                           as listingTagIds,
       if(other_cost_fba_amazon_quantity is null or other_cost_fba_amazon_quantity = 'None', 0,
          other_cost_fba_amazon_quantity)                                      as other_cost_fba_amazon_quantity,
       if(other_cost_fba_amazon_amount is null or other_cost_fba_amazon_amount = 'None', 0,
          other_cost_fba_amazon_amount)                                        as other_cost_fba_amazon_amount,
       if(other_cost_fba_multichannel_quantity is null or other_cost_fba_multichannel_quantity = 'None', 0,
          other_cost_fba_multichannel_quantity)                                as other_cost_fba_multichannel_quantity,
       if(other_cost_fba_multichannel_amount is null or other_cost_fba_multichannel_amount = 'None', 0,
          other_cost_fba_multichannel_amount)                                  as other_cost_fba_multichannel_amount,
       if(other_cost_fba_remove_quantity is null or other_cost_fba_remove_quantity = 'None', 0,
          other_cost_fba_remove_quantity)                                      as other_cost_fba_remove_quantity,
       if(other_cost_fba_remove_amount is null or other_cost_fba_remove_amount = 'None', 0,
          other_cost_fba_remove_amount)                                        as other_cost_fba_remove_amount,
       if(other_cost_fba_replacement_quantity is null or other_cost_fba_replacement_quantity = 'None', 0,
          other_cost_fba_replacement_quantity)                                 as other_cost_fba_replacement_quantity,
       if(other_cost_fba_replacement_amount is null or other_cost_fba_replacement_amount = 'None', 0,
          other_cost_fba_replacement_amount)                                   as other_cost_fba_replacement_amount,
       if(other_cost_fba_stock_out_quantity is null or other_cost_fba_stock_out_quantity = 'None', 0,
          other_cost_fba_stock_out_quantity)                                   as other_cost_fba_stock_out_quantity,
       if(other_cost_fba_stock_out_amount is null or other_cost_fba_stock_out_amount = 'None', 0,
          other_cost_fba_stock_out_amount)                                     as other_cost_fba_stock_out_amount,
       if(other_cost_fba_unsingle_return_quantity is null or other_cost_fba_unsingle_return_quantity = 'None', 0,
          other_cost_fba_unsingle_return_quantity)                             as other_cost_fba_unsingle_return_quantity,
       if(other_cost_fba_unsingle_return_amount is null or other_cost_fba_unsingle_return_amount = 'None', 0,
          other_cost_fba_unsingle_return_amount)                               as other_cost_fba_unsingle_return_amount,
       if(other_cost_fba_stock_in_quantity is null or other_cost_fba_stock_in_quantity = 'None', 0,
          other_cost_fba_stock_in_quantity)                                    as other_cost_fba_stock_in_quantity,
       if(other_cost_fba_stock_in_amount is null or other_cost_fba_stock_in_amount = 'None', 0,
          other_cost_fba_stock_in_amount)                                      as other_cost_fba_stock_in_amount,
       if(other_cost_fba_single_return_quantity is null or other_cost_fba_single_return_quantity = 'None', 0,
          other_cost_fba_single_return_quantity)                               as other_cost_fba_single_return_quantity,
       if(other_cost_fba_single_return_amount is null or other_cost_fba_single_return_amount = 'None', 0,
          other_cost_fba_single_return_amount)                                 as other_cost_fba_single_return_amount,
       if(other_cost_amazon_sale_outstock_quantity is null or other_cost_amazon_sale_outstock_quantity = 'None', 0,
          other_cost_amazon_sale_outstock_quantity)                            as other_cost_amazon_sale_outstock_quantity,
       if(other_cost_amazon_sale_outstock_amount is null or other_cost_amazon_sale_outstock_amount = 'None', 0,
          other_cost_amazon_sale_outstock_amount)                              as other_cost_amazon_sale_outstock_amount,
       if(cg_price_fba_amazon_quantity is null or cg_price_fba_amazon_quantity = 'None', 0,
          cg_price_fba_amazon_quantity)                                        as cg_price_fba_amazon_quantity,
       if(cg_price_fba_amazon_amount is null or cg_price_fba_amazon_amount = 'None', 0,
          cg_price_fba_amazon_amount)                                          as cg_price_fba_amazon_amount,
       if(cg_price_fba_multichannel_quantity is null or cg_price_fba_multichannel_quantity = 'None', 0,
          cg_price_fba_multichannel_quantity)                                  as cg_price_fba_multichannel_quantity,
       if(cg_price_fba_multichannel_amount is null or cg_price_fba_multichannel_amount = 'None', 0,
          cg_price_fba_multichannel_amount)                                    as cg_price_fba_multichannel_amount,
       if(cg_price_fba_remove_quantity is null or cg_price_fba_remove_quantity = 'None', 0,
          cg_price_fba_remove_quantity)                                        as cg_price_fba_remove_quantity,
       if(cg_price_fba_remove_amount is null or cg_price_fba_remove_amount = 'None', 0,
          cg_price_fba_remove_amount)                                          as cg_price_fba_remove_amount,
       if(cg_price_fba_replacement_quantity is null or cg_price_fba_replacement_quantity = 'None', 0,
          cg_price_fba_replacement_quantity)                                   as cg_price_fba_replacement_quantity,
       if(cg_price_fba_replacement_amount is null or cg_price_fba_replacement_amount = 'None', 0,
          cg_price_fba_replacement_amount)                                     as cg_price_fba_replacement_amount,
       if(cg_price_fba_stock_out_quantity is null or cg_price_fba_stock_out_quantity = 'None', 0,
          cg_price_fba_stock_out_quantity)                                     as cg_price_fba_stock_out_quantity,
       if(cg_price_fba_stock_out_amount is null or cg_price_fba_stock_out_amount = 'None', 0,
          cg_price_fba_stock_out_amount)                                       as cg_price_fba_stock_out_amount,
       if(cg_price_fba_unsingle_return_quantity is null or cg_price_fba_unsingle_return_quantity = 'None', 0,
          cg_price_fba_unsingle_return_quantity)                               as cg_price_fba_unsingle_return_quantity,
       if(cg_price_fba_unsingle_return_amount is null or cg_price_fba_unsingle_return_amount = 'None', 0,
          cg_price_fba_unsingle_return_amount)                                 as cg_price_fba_unsingle_return_amount,
       if(cg_price_fba_stock_in_quantity is null or cg_price_fba_stock_in_quantity = 'None', 0,
          cg_price_fba_stock_in_quantity)                                      as cg_price_fba_stock_in_quantity,
       if(cg_price_fba_stock_in_amount is null or cg_price_fba_stock_in_amount = 'None', 0,
          cg_price_fba_stock_in_amount)                                        as cg_price_fba_stock_in_amount,
       if(cg_price_fba_single_return_quantity is null or cg_price_fba_single_return_quantity = 'None', 0,
          cg_price_fba_single_return_quantity)                                 as cg_price_fba_single_return_quantity,
       if(cg_price_fba_single_return_amount is null or cg_price_fba_single_return_amount = 'None', 0,
          cg_price_fba_single_return_amount)                                   as cg_price_fba_single_return_amount,
       if(cg_price_amazon_sale_outstock_quantity is null or cg_price_amazon_sale_outstock_quantity = 'None', 0,
          cg_price_amazon_sale_outstock_quantity)                              as cg_price_amazon_sale_outstock_quantity,
       if(cg_price_amazon_sale_outstock_amount is null or cg_price_amazon_sale_outstock_amount = 'None', 0,
          cg_price_amazon_sale_outstock_amount)                                as cg_price_amazon_sale_outstock_amount,
       if(cg_tansport_cost_fba_amazon_quantity is null or cg_tansport_cost_fba_amazon_quantity = 'None', 0,
          cg_tansport_cost_fba_amazon_quantity)                                as cg_tansport_cost_fba_amazon_quantity,
       if(cg_tansport_cost_amazon_amount is null or cg_tansport_cost_amazon_amount = 'None', 0,
          cg_tansport_cost_amazon_amount)                                      as cg_tansport_cost_amazon_amount,
       if(cg_tansport_cost_fba_multichannel_quantity is null or cg_tansport_cost_fba_multichannel_quantity = 'None', 0,
          cg_tansport_cost_fba_multichannel_quantity)                          as cg_tansport_cost_fba_multichannel_quantity,
       if(cg_tansport_cost_fba_multichannel_amount is null or cg_tansport_cost_fba_multichannel_amount = 'None', 0,
          cg_tansport_cost_fba_multichannel_amount)                            as cg_tansport_cost_fba_multichannel_amount,
       if(cg_tansport_cost_fba_remove_quantity is null or cg_tansport_cost_fba_remove_quantity = 'None', 0,
          cg_tansport_cost_fba_remove_quantity)                                as cg_tansport_cost_fba_remove_quantity,
       if(cg_tansport_cost_fba_remove_amount is null or cg_tansport_cost_fba_remove_amount = 'None', 0,
          cg_tansport_cost_fba_remove_amount)                                  as cg_tansport_cost_fba_remove_amount,
       if(cg_tansport_cost_fba_replacement_quantity is null or cg_tansport_cost_fba_replacement_quantity = 'None', 0,
          cg_tansport_cost_fba_replacement_quantity)                           as cg_tansport_cost_fba_replacement_quantity,
       if(cg_tansport_cost_fba_replacement_amount is null or cg_tansport_cost_fba_replacement_amount = 'None', 0,
          cg_tansport_cost_fba_replacement_amount)                             as cg_tansport_cost_fba_replacement_amount,
       if(cg_tansport_cost_fba_stock_out_quantity is null or cg_tansport_cost_fba_stock_out_quantity = 'None', 0,
          cg_tansport_cost_fba_stock_out_quantity)                             as cg_tansport_cost_fba_stock_out_quantity,
       if(cg_tansport_cost_fba_stock_out_amount is null or cg_tansport_cost_fba_stock_out_amount = 'None', 0,
          cg_tansport_cost_fba_stock_out_amount)                               as cg_tansport_cost_fba_stock_out_amount,
       if(cg_tansport_cost_fba_unsingle_return_quantity is null or
          cg_tansport_cost_fba_unsingle_return_quantity = 'None', 0,
          cg_tansport_cost_fba_unsingle_return_quantity)                       as cg_tansport_cost_fba_unsingle_return_quantit,
       if(cg_tansport_cost_fba_unsingle_return_amount is null or cg_tansport_cost_fba_unsingle_return_amount = 'None',
          0,
          cg_tansport_cost_fba_unsingle_return_amount)                         as cg_tansport_cost_fba_unsingle_return_amount,
       if(cg_tansport_cost_fba_stock_in_quantity is null or cg_tansport_cost_fba_stock_in_quantity = 'None', 0,
          cg_tansport_cost_fba_stock_in_quantity)                              as cg_tansport_cost_fba_stock_in_quantity,
       if(cg_tansport_cost_fba_stock_in_amount is null or cg_tansport_cost_fba_stock_in_amount = 'None', 0,
          cg_tansport_cost_fba_stock_in_amount)                                as cg_tansport_cost_fba_stock_in_amount,
       if(cg_tansport_cost_fba_single_return_quantity is null or cg_tansport_cost_fba_single_return_quantity = 'None',
          0,
          cg_tansport_cost_fba_single_return_quantity)                         as cg_tansport_cost_fba_single_return_quantity,
       if(cg_tansport_cost_fba_single_return_amount is null or cg_tansport_cost_fba_single_return_amount = 'None', 0,
          cg_tansport_cost_fba_single_return_amount)                           as cg_tansport_cost_fba_single_return_amount,
       if(cg_tansport_cost_amazon_sale_outstock_quantity is null or
          cg_tansport_cost_amazon_sale_outstock_quantity = 'None', 0,
          cg_tansport_cost_amazon_sale_outstock_quantity)                      as cg_tansport_cost_amazon_sale_outstock_quantity,
       if(cg_tansport_cost_amazon_sale_outstock_amount is null or cg_tansport_cost_amazon_sale_outstock_amount = 'None',
          0,
          cg_tansport_cost_amazon_sale_outstock_amount)                        as cg_tansport_cost_amazon_sale_outstock_amount,
       customized_other_fee,
       customized_direct_shipping_fee,
       customized_fbm_order_fee,
       customized_fbm_order_return_fee,
       customized_fba_adjustment_fee,
       customized_buyout_subsidy,
       customized_new_product_subsidy,
       customized_provision_price,
       customized_provision_price_decreases,
       customized_settlement_price_difference_subsidy,
       customized_inbound_warehouse_outbound_fees,
       taxCollectedGiftWrap,
       taxCollectedShipping,
       taxCollectedDiscount,
       taxCollectedProduct,
       taxRefundedGiftWrap,
       taxRefundedShipping,
       taxRefundedDiscount,
       taxRefundedProduct,
       customized_multi_platform_headway_backflush,
       customized_multi_platform_tailrace_backflush,
       customized_multi_platform_cost_backflush,
       customized_subsidy_peak_storage_fees,
       customized_subsidy_promotion_fees,
       customized_amazon_seller_growth_fee,
       customized_hero_product_commission_fee
from ods_prod.ods_gsm_lx_profit_statement_msku_i_d as msku_sta
         left join ods_prod.ods_gsm_lx_profit_statement_msku_cost_detail_i_d as msku_sta_cost
                   on msku_sta.dt = msku_sta_cost.dt and msku_sta.msku = msku_sta_cost.msku and
                      msku_sta.sid = msku_sta_cost.sid
where msku_sta.msku != '-'
  and date_format(msku_sta.dt,'%Y%m') = '{y_m}'
on duplicate key update dt=values(dt),
                        totalFbaAndFbmQuantity=values(totalFbaAndFbmQuantity),
                        totalFbaAndFbmAmount=values(totalFbaAndFbmAmount),
                        totalSalesQuantity=values(totalSalesQuantity),
                        fbaSalesQuantity=values(fbaSalesQuantity),
                        fbmSalesQuantity=values(fbmSalesQuantity),
                        totalReshipQuantity=values(totalReshipQuantity),
                        reshipFbmProductSalesQuantity=values(reshipFbmProductSalesQuantity),
                        reshipFbmProductSaleRefundsQuantity=values(reshipFbmProductSaleRefundsQuantity),
                        reshipFbaProductSalesQuantity=values(reshipFbaProductSalesQuantity),
                        reshipFbaProductSaleRefundsQuantity=values(reshipFbaProductSaleRefundsQuantity),
                        mcFbaFulfillmentFeesQuantity=values(mcFbaFulfillmentFeesQuantity),
                        cgAbsQuantity=values(cgAbsQuantity),
                        cgQuantity=values(cgQuantity),
                        fbaInventoryCreditQuantity=values(fbaInventoryCreditQuantity),
                        disposalQuantity=values(disposalQuantity),
                        removalQuantity=values(removalQuantity),
                        totalAdsSales=values(totalAdsSales),
                        adsSdSales=values(adsSdSales),
                        adsSpSales=values(adsSpSales),
                        sharedAdsSbSales=values(sharedAdsSbSales),
                        sharedAdsSbvSales=values(sharedAdsSbvSales),
                        totalAdsSalesQuantity=values(totalAdsSalesQuantity),
                        adsSdSalesQuantity=values(adsSdSalesQuantity),
                        adsSpSalesQuantity=values(adsSpSalesQuantity),
                        sharedAdsSbSalesQuantity=values(sharedAdsSbSalesQuantity),
                        sharedAdsSbvSalesQuantity=values(sharedAdsSbvSalesQuantity),
                        totalSalesAmount=values(totalSalesAmount),
                        fbaSaleAmount=values(fbaSaleAmount),
                        fbmSaleAmount=values(fbmSaleAmount),
                        shippingCredits=values(shippingCredits),
                        promotionalRebates=values(promotionalRebates),
                        fbaInventoryCredit=values(fbaInventoryCredit),
                        cashOnDelivery=values(cashOnDelivery),
                        otherInAmount=values(otherInAmount),
                        fbaLiquidationProceeds=values(fbaLiquidationProceeds),
                        fbaLiquidationProceedsAdjustments=values(fbaLiquidationProceedsAdjustments),
                        amazonShippingReimbursement=values(amazonShippingReimbursement),
                        safeTReimbursement=values(safeTReimbursement),
                        netcoTransaction=values(netcoTransaction),
                        reimbursements=values(reimbursements),
                        clawbacks=values(clawbacks),
                        sharedComminglingVatIncome=values(sharedComminglingVatIncome),
                        giftWrapCredits=values(giftWrapCredits),
                        guaranteeClaims=values(guaranteeClaims),
                        costOfPoIntegersGranted=values(costOfPoIntegersGranted),
                        others=values(others),
                        totalSalesRefunds=values(totalSalesRefunds),
                        fbaSalesRefunds=values(fbaSalesRefunds),
                        fbmSalesRefunds=values(fbmSalesRefunds),
                        shippingCreditRefunds=values(shippingCreditRefunds),
                        giftWrapCreditRefunds=values(giftWrapCreditRefunds),
                        chargebacks=values(chargebacks),
                        costOfPoIntegersReturned=values(costOfPoIntegersReturned),
                        promotionalRebateRefunds=values(promotionalRebateRefunds),
                        totalFeeRefunds=values(totalFeeRefunds),
                        sellingFeeRefunds=values(sellingFeeRefunds),
                        fbaTransactionFeeRefunds=values(fbaTransactionFeeRefunds),
                        refundAdministrationFees=values(refundAdministrationFees),
                        otherTransactionFeeRefunds=values(otherTransactionFeeRefunds),
                        refundForAdvertiser=values(refundForAdvertiser),
                        pointsAdjusted=values(pointsAdjusted),
                        shippingLabelRefunds=values(shippingLabelRefunds),
                        refundsQuantity=values(refundsQuantity),
                        refundsRate=values(refundsRate),
                        fbaReturnsQuantity=values(fbaReturnsQuantity),
                        fbaReturnsSaleableQuantity=values(fbaReturnsSaleableQuantity),
                        fbaReturnsUnsaleableQuantity=values(fbaReturnsUnsaleableQuantity),
                        fbaReturnsQuantityRate=values(fbaReturnsQuantityRate),
                        platformFee=values(platformFee),
                        totalFbaDeliveryFee=values(totalFbaDeliveryFee),
                        fbaDeliveryFee=values(fbaDeliveryFee),
                        mcFbaDeliveryFee=values(mcFbaDeliveryFee),
                        otherTransactionFees=values(otherTransactionFees),
                        totalAdsCost=values(totalAdsCost),
                        adsSpCost=values(adsSpCost),
                        adsSbCost=values(adsSbCost),
                        adsSbvCost=values(adsSbvCost),
                        adsSdCost=values(adsSdCost),
                        sharedCostOfAdvertising=values(sharedCostOfAdvertising),
                        promotionFee=values(promotionFee),
                        sharedSubscriptionFee=values(sharedSubscriptionFee),
                        sharedLdFee=values(sharedLdFee),
                        sharedCouponFee=values(sharedCouponFee),
                        sharedEarlyReviewerProgramFee=values(sharedEarlyReviewerProgramFee),
                        sharedVineFee=values(sharedVineFee),
                        totalStorageFee=values(totalStorageFee),
                        fbaStorageFee=values(fbaStorageFee),
                        sharedFbaStorageFee=values(sharedFbaStorageFee),
                        longTermStorageFee=values(longTermStorageFee),
                        sharedLongTermStorageFee=values(sharedLongTermStorageFee),
                        sharedStorageRenewalBilling=values(sharedStorageRenewalBilling),
                        sharedFbaDisposalFee=values(sharedFbaDisposalFee),
                        sharedFbaRemovalFee=values(sharedFbaRemovalFee),
                        sharedFbaInboundTransportationProgramFee=values(sharedFbaInboundTransportationProgramFee),
                        sharedLabelingFee=values(sharedLabelingFee),
                        sharedPolybaggingFee=values(sharedPolybaggingFee),
                        sharedBubblewrapFee=values(sharedBubblewrapFee),
                        sharedTapingFee=values(sharedTapingFee),
                        sharedFbaCustomerReturnFee=values(sharedFbaCustomerReturnFee),
                        sharedFbaInboundDefectFee=values(sharedFbaInboundDefectFee),
                        sharedFbaOverageFee=values(sharedFbaOverageFee),
                        sharedAmazonPartneredCarrierShipmentFee=values(sharedAmazonPartneredCarrierShipmentFee),
                        sharedFbaInboundConvenienceFee=values(sharedFbaInboundConvenienceFee),
                        sharedItemFeeAdjustment=values(sharedItemFeeAdjustment),
                        sharedOtherFbaInventoryFees=values(sharedOtherFbaInventoryFees),
                        fbaStorageFeeAccrual=values(fbaStorageFeeAccrual),
                        fbaStorageFeeAccrualDifference=values(fbaStorageFeeAccrualDifference),
                        longTermStorageFeeAccrual=values(longTermStorageFeeAccrual),
                        longTermStorageFeeAccrualDifference=values(longTermStorageFeeAccrualDifference),
                        sharedFbaIntegerernationalInboundFee=values(sharedFbaIntegerernationalInboundFee),
                        adjustments=values(adjustments),
                        totalPlatformOtherFee=values(totalPlatformOtherFee),
                        shippingLabelPurchases=values(shippingLabelPurchases),
                        sharedCarrierShippingLabelAdjustments=values(sharedCarrierShippingLabelAdjustments),
                        sharedLiquidationsFees=values(sharedLiquidationsFees),
                        sharedManualProcessingFee=values(sharedManualProcessingFee),
                        sharedOtherServiceFees=values(sharedOtherServiceFees),
                        totalSalesTax=values(totalSalesTax),
                        taxCollected=values(taxCollected),
                        tcsIgstCollected=values(tcsIgstCollected),
                        tcsSgstCollected=values(tcsSgstCollected),
                        tcsCgstCollected=values(tcsCgstCollected),
                        sharedComminglingVatExpenses=values(sharedComminglingVatExpenses),
                        sharedTaxAdjustment=values(sharedTaxAdjustment),
                        salesTaxRefund=values(salesTaxRefund),
                        taxRefunded=values(taxRefunded),
                        tcsIgstRefunded=values(tcsIgstRefunded),
                        tcsSgstRefunded=values(tcsSgstRefunded),
                        tcsCgstRefunded=values(tcsCgstRefunded),
                        salesTaxWithheld=values(salesTaxWithheld),
                        refundTaxWithheld=values(refundTaxWithheld),
                        tdsSection194ONet=values(tdsSection194ONet),
                        cgPriceTotal=values(cgPriceTotal),
                        cgPriceAbsTotal=values(cgPriceAbsTotal),
                        hasCgPriceDetail=values(hasCgPriceDetail),
                        cgUnitPrice=values(cgUnitPrice),
                        proportionOfCg=values(proportionOfCg),
                        cgTransportCostsTotal=values(cgTransportCostsTotal),
                        hasCgTransportCostsDetail=values(hasCgTransportCostsDetail),
                        cgTransportUnitCosts=values(cgTransportUnitCosts),
                        proportionOfCgTransport=values(proportionOfCgTransport),
                        totalCost=values(totalCost),
                        proportionOfTotalCost=values(proportionOfTotalCost),
                        cgOtherCostsTotal=values(cgOtherCostsTotal),
                        cgOtherUnitCosts=values(cgOtherUnitCosts),
                        hasCgOtherCostsDetail=values(hasCgOtherCostsDetail),
                        proportionOfCgOtherCosts=values(proportionOfCgOtherCosts),
                        grossProfit=values(grossProfit),
                        grossRate=values(grossRate),
                        grossProfitIncome=values(grossProfitIncome),
                        otherFeeStr=values(otherFeeStr),
                        customOrderFee=values(customOrderFee),
                        customOrderFeePrincipal=values(customOrderFeePrincipal),
                        customOrderFeeCommission=values(customOrderFeeCommission),
                        id=values(id),
                        sid=values(sid),
                        reportDateMonth=values(reportDateMonth),
                        postedDateLocale=values(postedDateLocale),
                        isDisplayDetail=values(isDisplayDetail),
                        pic_url=values(pic_url),
                        msku=values(msku),
                        asin=values(asin),
                        parent_asin=values(parent_asin),
                        store_name=values(store_name),
                        country=values(country),
                        country_code=values(country_code),
                        color_size=values(color_size),
                        localSku=values(localSku),
                        itemName=values(itemName),
                        model=values(model),
                        principal_name=values(principal_name),
                        productDeveloperRealname=values(productDeveloperRealname),
                        category=values(category),
                        brand=values(brand),
                        currency_code=values(currency_code),
                        currency_symbol=values(currency_symbol),
                        listingTagIds=values(listingTagIds),
                        other_cost_fba_amazon_quantity=values(other_cost_fba_amazon_quantity),
                        other_cost_fba_amazon_amount=values(other_cost_fba_amazon_amount),
                        other_cost_fba_multichannel_quantity=values(other_cost_fba_multichannel_quantity),
                        other_cost_fba_multichannel_amount=values(other_cost_fba_multichannel_amount),
                        other_cost_fba_remove_quantity=values(other_cost_fba_remove_quantity),
                        other_cost_fba_remove_amount=values(other_cost_fba_remove_amount),
                        other_cost_fba_replacement_quantity=values(other_cost_fba_replacement_quantity),
                        other_cost_fba_replacement_amount=values(other_cost_fba_replacement_amount),
                        other_cost_fba_stock_out_quantity=values(other_cost_fba_stock_out_quantity),
                        other_cost_fba_stock_out_amount=values(other_cost_fba_stock_out_amount),
                        other_cost_fba_unsingle_return_quantity=values(other_cost_fba_unsingle_return_quantity),
                        other_cost_fba_unsingle_return_amount=values(other_cost_fba_unsingle_return_amount),
                        other_cost_fba_stock_in_quantity=values(other_cost_fba_stock_in_quantity),
                        other_cost_fba_stock_in_amount=values(other_cost_fba_stock_in_amount),
                        other_cost_fba_single_return_quantity=values(other_cost_fba_single_return_quantity),
                        other_cost_fba_single_return_amount=values(other_cost_fba_single_return_amount),
                        other_cost_amazon_sale_outstock_quantity=values(other_cost_amazon_sale_outstock_quantity),
                        other_cost_amazon_sale_outstock_amount=values(other_cost_amazon_sale_outstock_amount),
                        cg_price_fba_amazon_quantity=values(cg_price_fba_amazon_quantity),
                        cg_price_fba_amazon_amount=values(cg_price_fba_amazon_amount),
                        cg_price_fba_multichannel_quantity=values(cg_price_fba_multichannel_quantity),
                        cg_price_fba_multichannel_amount=values(cg_price_fba_multichannel_amount),
                        cg_price_fba_remove_quantity=values(cg_price_fba_remove_quantity),
                        cg_price_fba_remove_amount=values(cg_price_fba_remove_amount),
                        cg_price_fba_replacement_quantity=values(cg_price_fba_replacement_quantity),
                        cg_price_fba_replacement_amount=values(cg_price_fba_replacement_amount),
                        cg_price_fba_stock_out_quantity=values(cg_price_fba_stock_out_quantity),
                        cg_price_fba_stock_out_amount=values(cg_price_fba_stock_out_amount),
                        cg_price_fba_unsingle_return_quantity=values(cg_price_fba_unsingle_return_quantity),
                        cg_price_fba_unsingle_return_amount=values(cg_price_fba_unsingle_return_amount),
                        cg_price_fba_stock_in_quantity=values(cg_price_fba_stock_in_quantity),
                        cg_price_fba_stock_in_amount=values(cg_price_fba_stock_in_amount),
                        cg_price_fba_single_return_quantity=values(cg_price_fba_single_return_quantity),
                        cg_price_fba_single_return_amount=values(cg_price_fba_single_return_amount),
                        cg_price_amazon_sale_outstock_quantity=values(cg_price_amazon_sale_outstock_quantity),
                        cg_price_amazon_sale_outstock_amount=values(cg_price_amazon_sale_outstock_amount),
                        cg_tansport_cost_fba_amazon_quantity=values(cg_tansport_cost_fba_amazon_quantity),
                        cg_tansport_cost_amazon_amount=values(cg_tansport_cost_amazon_amount),
                        cg_tansport_cost_fba_multichannel_quantity=values(cg_tansport_cost_fba_multichannel_quantity),
                        cg_tansport_cost_fba_multichannel_amount=values(cg_tansport_cost_fba_multichannel_amount),
                        cg_tansport_cost_fba_remove_quantity=values(cg_tansport_cost_fba_remove_quantity),
                        cg_tansport_cost_fba_remove_amount=values(cg_tansport_cost_fba_remove_amount),
                        cg_tansport_cost_fba_replacement_quantity=values(cg_tansport_cost_fba_replacement_quantity),
                        cg_tansport_cost_fba_replacement_amount=values(cg_tansport_cost_fba_replacement_amount),
                        cg_tansport_cost_fba_stock_out_quantity=values(cg_tansport_cost_fba_stock_out_quantity),
                        cg_tansport_cost_fba_stock_out_amount=values(cg_tansport_cost_fba_stock_out_amount),
                        cg_tansport_cost_fba_unsingle_return_quantity=values(cg_tansport_cost_fba_unsingle_return_quantity),
                        cg_tansport_cost_fba_unsingle_return_amount=values(cg_tansport_cost_fba_unsingle_return_amount),
                        cg_tansport_cost_fba_stock_in_quantity=values(cg_tansport_cost_fba_stock_in_quantity),
                        cg_tansport_cost_fba_stock_in_amount=values(cg_tansport_cost_fba_stock_in_amount),
                        cg_tansport_cost_fba_single_return_quantity=values(cg_tansport_cost_fba_single_return_quantity),
                        cg_tansport_cost_fba_single_return_amount=values(cg_tansport_cost_fba_single_return_amount),
                        cg_tansport_cost_amazon_sale_outstock_quantity=values(cg_tansport_cost_amazon_sale_outstock_quantity),
                        cg_tansport_cost_amazon_sale_outstock_amount=values(cg_tansport_cost_amazon_sale_outstock_amount),
                        customized_other_fee=values(customized_other_fee),
                        customized_direct_shipping_fee=values(customized_direct_shipping_fee),
                        customized_fbm_order_fee=values(customized_fbm_order_fee),
                        customized_fbm_order_return_fee=values(customized_fbm_order_return_fee),
                        customized_fba_adjustment_fee=values(customized_fba_adjustment_fee),
                        customized_buyout_subsidy=values(customized_buyout_subsidy),
                        customized_new_product_subsidy=values(customized_new_product_subsidy),
                        customized_provision_price=values(customized_provision_price),
                        customized_provision_price_decreases=values(customized_provision_price_decreases),
                        customized_settlement_price_difference_subsidy=values(customized_settlement_price_difference_subsidy),
                        customized_inbound_warehouse_outbound_fees=values(customized_inbound_warehouse_outbound_fees),
                        taxCollectedGiftWrap=values(taxCollectedGiftWrap),
                        taxCollectedShipping=values(taxCollectedShipping),
                        taxCollectedDiscount=values(taxCollectedDiscount),
                        taxCollectedProduct=values(taxCollectedProduct),
                        taxRefundedGiftWrap=values(taxRefundedGiftWrap),
                        taxRefundedShipping=values(taxRefundedShipping),
                        taxRefundedDiscount=values(taxRefundedDiscount),
                        taxRefundedProduct=values(taxRefundedProduct),
                        customized_multi_platform_headway_backflush=values(customized_multi_platform_headway_backflush),
                        customized_multi_platform_tailrace_backflush=values(customized_multi_platform_tailrace_backflush),
                        customized_multi_platform_cost_backflush=values(customized_multi_platform_cost_backflush),
                        customized_subsidy_peak_storage_fees=values(customized_subsidy_peak_storage_fees),
                        customized_subsidy_promotion_fees=values(customized_subsidy_promotion_fees),
                        customized_amazon_seller_growth_fee=values(customized_amazon_seller_growth_fee),
                        customized_hero_product_commission_fee=values(customized_hero_product_commission_fee);
        """
        tidb_ob.commit_sql(save_sql)
        logger.info(f'{y_m} 同步完成')


run_sql()
